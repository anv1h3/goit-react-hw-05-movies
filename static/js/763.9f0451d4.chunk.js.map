{"version":3,"file":"static/js/763.9f0451d4.chunk.js","mappings":"0NAIaA,EAAc,WAAO,IAAD,EAC/B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAE3CC,QAAQC,IAAIH,GAeZ,OACE,kBAAMI,SAdkB,SAAAC,GACxBA,EAAEC,iBACF,IAAMC,EAAaZ,EACnB,GAAmB,KAAfY,EACF,OAAOR,EAAgB,CAAC,GAE1BA,EAAgB,CAAEC,MAAOO,GACxB,EAOD,WACE,kBAAOC,KAAK,SAASb,MAAOA,EAAOc,SANlB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBd,EAASc,EAAOf,MACjB,KAKG,mBAAQa,KAAK,SAAb,sBAGL,E,kBCeD,EAvCe,WAAO,IAAD,EACnB,GAA4Cd,EAAAA,EAAAA,UAAS,MAArD,eAAOiB,EAAP,KAAuBC,EAAvB,KACA,GAAuBf,EAAAA,EAAAA,MAAhBC,GAAP,eACMe,GAAWC,EAAAA,EAAAA,MAEjB,GAA0BpB,EAAAA,EAAAA,UAAS,IAAnC,eAAOqB,EAAP,KAAcC,EAAd,KACA,GAAkCtB,EAAAA,EAAAA,WAAS,GAA3C,eAAOuB,EAAP,KAAkBC,EAAlB,KACMC,EAAU,UAAGrB,EAAaG,IAAI,gBAApB,QAAgC,GAWhD,OATAmB,EAAAA,EAAAA,YAAU,WAERD,IACEE,EAAAA,EAAAA,IAAaF,GACVG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAAI,OAAIb,EAAkBa,EAAKC,QAA3B,IACTC,OAAM,SAAAZ,GAAK,OAAIC,EAASD,EAAMa,QAAnB,IACXC,QAAQX,GAAa,GAC3B,GAAE,CAACC,KAEF,gCACGJ,IAAS,oDAEV,SAACtB,EAAD,IACCwB,IAAa,uCACd,wBACGN,GACCA,EAAemB,KAAI,SAAAC,GACjB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMtB,GAAxC,SACGkB,EAAMK,SAFFL,EAAME,GAMlB,QAIV,C,uJC5CD,IAAMI,EAAW,+BACXC,EAAU,mCAEHC,EAAc,WACvB,OAAOC,MAAM,GAAD,OAAIH,EAAJ,uCAA2CC,GAC1D,EAEYjB,EAAe,SAACrB,GACzB,OAAOwC,MAAM,GAAD,OAAIH,EAAJ,+BAAmCrC,EAAnC,oBAAoDsC,GACnE,EAEYG,EAAiB,SAACC,GAC3B,OAAOF,MAAM,GAAD,OAAIH,EAAJ,kBAAsBK,EAAtB,oBAAyCJ,GACxD,EAEYK,EAAkB,SAACD,GAC5B,OAAOF,MAAM,GAAD,OAAIH,EAAJ,kBAAsBK,EAAtB,4BAAiDJ,GAChE,EAEYM,EAAiB,SAACF,GAC3B,OAAOF,MAAM,GAAD,OAAIH,EAAJ,kBAAsBK,EAAtB,4BAAiDJ,GAChE,C","sources":["components/Search.jsx","pages/Movies.jsx","servises/FetchData.jsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const SearchMovie = () => {\n  const [value, setValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  \n  console.log(query);\n\n  const updateQueryString = e => {\n    e.preventDefault();\n    const queryValue = value;\n    if (queryValue === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: queryValue });\n    };\n\n  const handleChange = ({ target }) => {\n    setValue(target.value);\n  };\n\n  return (\n    <form onSubmit={updateQueryString}>\n      <input type=\"search\" value={value} onChange={handleChange} />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import {React} from 'react';\nimport { useState, useEffect } from 'react';\nimport { SearchMovie } from 'components/Search';\nimport { searchMovies } from 'servises/FetchData';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchedMovies, setSearchedMovies] = useState(null);\n  const [searchParams] = useSearchParams();\n  const location = useLocation();\n\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const movieQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n\n    movieQuery &&\n      searchMovies(movieQuery)\n        .then(response => response.json())\n        .then(data => setSearchedMovies(data.results))\n        .catch(error => setError(error.message))\n        .finally(setIsLoading(false));\n  }, [movieQuery]);\n  return (\n    <>\n      {error && <p>Something went wrong...</p>}\n\n      <SearchMovie />\n      {isLoading && <p>Loading...</p>}\n      <ul>\n        {searchedMovies &&\n          searchedMovies.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link to={`${movie.id}`} state={{ from: location }}>\n                  {movie.title}\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n};\nexport default Movies;","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'fae442014c974ac619f95851fb255ed7';\n\nexport const getTrending = () => {\n    return fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n}\n\nexport const searchMovies = (query) => {\n    return fetch(`${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`);\n}\n\nexport const getMovieDetail = (movieID) => {\n    return fetch(`${BASE_URL}/movie/${movieID}?api_key=${API_KEY}`);\n}\n\nexport const getMovieCredits = (movieID) => {\n    return fetch(`${BASE_URL}/movie/${movieID}/credits?api_key=${API_KEY}`);\n}\n\nexport const getMovieReview = (movieID) => {\n    return fetch(`${BASE_URL}/movie/${movieID}/reviews?api_key=${API_KEY}`);\n}"],"names":["SearchMovie","useState","value","setValue","useSearchParams","searchParams","setSearchParams","query","get","console","log","onSubmit","e","preventDefault","queryValue","type","onChange","target","searchedMovies","setSearchedMovies","location","useLocation","error","setError","isLoading","setIsLoading","movieQuery","useEffect","searchMovies","then","response","json","data","results","catch","message","finally","map","movie","to","id","state","from","title","BASE_URL","API_KEY","getTrending","fetch","getMovieDetail","movieID","getMovieCredits","getMovieReview"],"sourceRoot":""}