{"version":3,"file":"static/js/610.9fbc2523.chunk.js","mappings":"yQAGMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,oFAQHE,EAAW,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,GAAIC,EAAc,EAAdA,SAC1B,OAAO,SAACL,EAAD,CAAYI,GAAIA,EAAhB,SAAqBC,GAC/B,ECqED,EA1EqB,WAAO,IAAD,IACnBC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAC3CC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAkCJ,EAAAA,EAAAA,UAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOO,EAAP,KAAeC,EAAf,KACA,GAA4BR,EAAAA,EAAAA,UAAS,IAArC,eAAOS,EAAP,KAAeC,EAAf,KACA,GAA0BV,EAAAA,EAAAA,UAAS,IAAnC,eAAOW,EAAP,KAAcC,EAAd,KACA,GAAkCZ,EAAAA,EAAAA,WAAS,GAA3C,eAAOa,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbE,EAAAA,EAAAA,IAAelB,GACZmB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACJlB,EAASkB,EAAKnB,OACdG,EAAYgB,EAAKjB,UACjBG,EAAae,KAAKC,MAAkC,GAA5BC,OAAOH,EAAKI,gBACpChB,EAAUY,EAAKb,QACfG,EAAUU,EAAKK,YAChB,IACAC,OAAM,SAAAf,GAAK,OAAIC,EAASD,EAAMgB,QAAnB,IACXC,QAAQd,GAAa,GACzB,GAAE,CAAChB,KAGF,2BACGa,IAAS,mDACTE,IAAa,uCACd,SAACxB,EAAD,CAAUwC,KAAK,SAASvC,GAAII,EAAYoC,QAAxC,sBAGA,iBAAKC,UAAU,gBAAf,WACE,gBACEC,IACEvB,EAAM,0CAAsCA,GAAWwB,EAEzDC,IAAI,GACJC,MAAM,MACNC,OAAO,UAET,iBAAKL,UAAU,oBAAf,WACE,wBAAK9B,KACL,yCAAiBI,EAAjB,QACA,sCACA,uBAAIF,KACJ,oCACA,wBACGI,EAAO8B,KAAI,SAAAC,GACV,OAAO,wBAAiCA,EAAMC,MAA9BhC,EAAOiC,QAAQF,GAChC,aAIP,iBAAKP,UAAU,oBAAf,WACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMzC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAmD,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,WAKT,C,uJCjFD,IAAMC,EAAW,+BACXC,EAAU,mCAEHC,EAAc,WACvB,OAAOC,MAAM,GAAD,OAAIH,EAAJ,uCAA2CC,GAC1D,EAEYG,EAAe,SAACC,GACzB,OAAOF,MAAM,GAAD,OAAIH,EAAJ,+BAAmCK,EAAnC,oBAAoDJ,GACnE,EAEY5B,EAAiB,SAACiC,GAC3B,OAAOH,MAAM,GAAD,OAAIH,EAAJ,kBAAsBM,EAAtB,oBAAyCL,GACxD,EAEYM,EAAkB,SAACD,GAC5B,OAAOH,MAAM,GAAD,OAAIH,EAAJ,kBAAsBM,EAAtB,4BAAiDL,GAChE,EAEYO,EAAiB,SAACF,GAC3B,OAAOH,MAAM,GAAD,OAAIH,EAAJ,kBAAsBM,EAAtB,4BAAiDL,GAChE,C","sources":["components/BackLink.jsx","pages/MovieDetails.jsx","servises/FetchData.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledLink = styled(Link)`\n  color: black;\n\n  :hover {\n    color: blueviolet;\n  }\n`;\n\nexport const BackLink = ({to, children}) => {\n    return <StyledLink to={to}>{children}</StyledLink>\n}","import { Suspense } from 'react';\nimport { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetail } from 'servises/FetchData';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport defaulImage from '../components/images/No-Image-Placeholder-min.png';\nimport { BackLink } from 'components/BackLink';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/movies');\n  const { movieId } = useParams();\n\n  const [title, setTitle] = useState('');\n  const [overview, setOverview] = useState('');\n  const [userScore, setUserScore] = useState(0);\n  const [genres, setGenres] = useState([]);\n  const [poster, setPoster] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieDetail(movieId)\n      .then(response => response.json())\n      .then(data => {\n        setTitle(data.title);\n        setOverview(data.overview);\n        setUserScore(Math.round(Number(data.vote_average) * 10));\n        setGenres(data.genres);\n        setPoster(data.poster_path);\n      })\n      .catch(error => setError(error.message))\n      .finally(setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <div>\n      {error && <p>Something went wrong...</p>}\n      {isLoading && <p>Loading...</p>}\n      <BackLink type=\"button\" to={backLinkRef.current}>\n        Go back\n      </BackLink>\n      <div className=\"movie_details\">\n        <img\n          src={\n            poster ? `https://image.tmdb.org/t/p/w300/${poster}` : defaulImage\n          }\n          alt=\"\"\n          width=\"300\"\n          height=\"auto\"\n        />\n        <div className=\"movie_information\">\n          <h1>{title}</h1>\n          <p>User Score - {userScore}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <ul>\n            {genres.map(genre => {\n              return <li key={genres.indexOf(genre)}>{genre.name}</li>;\n            })}\n          </ul>\n        </div>\n      </div>\n      <div className=\"movie_information\">\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </div>\n  );\n};\nexport default MovieDetails;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'fae442014c974ac619f95851fb255ed7';\n\nexport const getTrending = () => {\n    return fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n}\n\nexport const searchMovies = (query) => {\n    return fetch(`${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`);\n}\n\nexport const getMovieDetail = (movieID) => {\n    return fetch(`${BASE_URL}/movie/${movieID}?api_key=${API_KEY}`);\n}\n\nexport const getMovieCredits = (movieID) => {\n    return fetch(`${BASE_URL}/movie/${movieID}/credits?api_key=${API_KEY}`);\n}\n\nexport const getMovieReview = (movieID) => {\n    return fetch(`${BASE_URL}/movie/${movieID}/reviews?api_key=${API_KEY}`);\n}"],"names":["StyledLink","styled","Link","BackLink","to","children","location","useLocation","backLinkRef","useRef","state","from","movieId","useParams","useState","title","setTitle","overview","setOverview","userScore","setUserScore","genres","setGenres","poster","setPoster","error","setError","isLoading","setIsLoading","useEffect","getMovieDetail","then","response","json","data","Math","round","Number","vote_average","poster_path","catch","message","finally","type","current","className","src","defaulImage","alt","width","height","map","genre","name","indexOf","Suspense","fallback","BASE_URL","API_KEY","getTrending","fetch","searchMovies","query","movieID","getMovieCredits","getMovieReview"],"sourceRoot":""}